// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ner.proto

package protogen

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NerRequest struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NerRequest) Reset()         { *m = NerRequest{} }
func (m *NerRequest) String() string { return proto.CompactTextString(m) }
func (*NerRequest) ProtoMessage()    {}
func (*NerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ner_a15c2992151d7e6b, []int{0}
}
func (m *NerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NerRequest.Unmarshal(m, b)
}
func (m *NerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NerRequest.Marshal(b, m, deterministic)
}
func (dst *NerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NerRequest.Merge(dst, src)
}
func (m *NerRequest) XXX_Size() int {
	return xxx_messageInfo_NerRequest.Size(m)
}
func (m *NerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NerRequest proto.InternalMessageInfo

func (m *NerRequest) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

type NerResponse struct {
	Entities             []string `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NerResponse) Reset()         { *m = NerResponse{} }
func (m *NerResponse) String() string { return proto.CompactTextString(m) }
func (*NerResponse) ProtoMessage()    {}
func (*NerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ner_a15c2992151d7e6b, []int{1}
}
func (m *NerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NerResponse.Unmarshal(m, b)
}
func (m *NerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NerResponse.Marshal(b, m, deterministic)
}
func (dst *NerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NerResponse.Merge(dst, src)
}
func (m *NerResponse) XXX_Size() int {
	return xxx_messageInfo_NerResponse.Size(m)
}
func (m *NerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NerResponse proto.InternalMessageInfo

func (m *NerResponse) GetEntities() []string {
	if m != nil {
		return m.Entities
	}
	return nil
}

func init() {
	proto.RegisterType((*NerRequest)(nil), "protogen.NerRequest")
	proto.RegisterType((*NerResponse)(nil), "protogen.NerResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NerServiceClient is the client API for NerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NerServiceClient interface {
	ExtractSubjectOrgs(ctx context.Context, in *NerRequest, opts ...grpc.CallOption) (*NerResponse, error)
}

type nerServiceClient struct {
	cc *grpc.ClientConn
}

func NewNerServiceClient(cc *grpc.ClientConn) NerServiceClient {
	return &nerServiceClient{cc}
}

func (c *nerServiceClient) ExtractSubjectOrgs(ctx context.Context, in *NerRequest, opts ...grpc.CallOption) (*NerResponse, error) {
	out := new(NerResponse)
	err := c.cc.Invoke(ctx, "/protogen.NerService/ExtractSubjectOrgs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NerServiceServer is the server API for NerService service.
type NerServiceServer interface {
	ExtractSubjectOrgs(context.Context, *NerRequest) (*NerResponse, error)
}

func RegisterNerServiceServer(s *grpc.Server, srv NerServiceServer) {
	s.RegisterService(&_NerService_serviceDesc, srv)
}

func _NerService_ExtractSubjectOrgs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NerServiceServer).ExtractSubjectOrgs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protogen.NerService/ExtractSubjectOrgs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NerServiceServer).ExtractSubjectOrgs(ctx, req.(*NerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protogen.NerService",
	HandlerType: (*NerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExtractSubjectOrgs",
			Handler:    _NerService_ExtractSubjectOrgs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ner.proto",
}

func init() { proto.RegisterFile("ner.proto", fileDescriptor_ner_a15c2992151d7e6b) }

var fileDescriptor_ner_a15c2992151d7e6b = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcc, 0x4b, 0x2d, 0xd2,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xe9, 0xa9, 0x79, 0x4a, 0x4a, 0x5c, 0x5c,
	0x7e, 0xa9, 0x45, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x22, 0x5c, 0xac, 0x99, 0x79,
	0x05, 0xa5, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x92, 0x26, 0x17, 0x37,
	0x58, 0x4d, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x14, 0x17, 0x47, 0x6a, 0x5e, 0x49, 0x66,
	0x49, 0x66, 0x6a, 0xb1, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0x67, 0x10, 0x9c, 0x6f, 0xe4, 0x0f, 0x36,
	0x2e, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x91, 0x4b, 0xc8, 0xb5, 0xa2, 0xa4, 0x28,
	0x31, 0xb9, 0x24, 0xb8, 0x34, 0x29, 0x2b, 0x35, 0xb9, 0xc4, 0xbf, 0x28, 0xbd, 0x58, 0x48, 0x44,
	0x0f, 0x66, 0xbb, 0x1e, 0xc2, 0x6a, 0x29, 0x51, 0x34, 0x51, 0x88, 0x65, 0x49, 0x6c, 0x60, 0x51,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x79, 0xb6, 0x4f, 0xbd, 0x00, 0x00, 0x00,
}
